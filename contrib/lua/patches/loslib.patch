Index: lua/lua/loslib.c
===================================================================
--- lua.orig/lua/loslib.c
+++ lua/lua/loslib.c
@@ -183,6 +183,38 @@ static int os_getenv (lua_State *L) {
 }
 
 
+static int os_setenv (lua_State *L) {
+  const char *name = luaL_checkstring(L, 1);
+  const char *value = luaL_checkstring(L, 2);
+  int overwrite = luaL_optinteger(L, 3, 0);
+  setenv(name, value, overwrite);
+  return 0;
+}
+
+
+static int os_unsetenv (lua_State *L) {
+  unsetenv(luaL_checkstring(L, 1));
+  return 0;
+}
+
+extern const char **environ;
+
+static int os_environ (lua_State *L) {
+  int envc;
+  for (envc = 0; environ[envc]; envc++);
+  lua_createtable(L, 0, envc);
+  for (int i = 0; i < envc; i++) {
+    const char *name = environ[i];
+    const char *value = strchr(name, '=');
+    size_t namelen = value - name;
+    lua_pushlstring(L, name, namelen);
+    lua_pushstring(L, value + 1);
+    lua_settable(L, -3);
+  }
+  return 1;
+}
+
+
 static int os_clock (lua_State *L) {
   lua_pushnumber(L, ((lua_Number)clock())/(lua_Number)CLOCKS_PER_SEC);
   return 1;
@@ -411,6 +443,9 @@ static const luaL_Reg syslib[] = {
   {"execute",   os_execute},
   {"exit",      os_exit},
   {"getenv",    os_getenv},
+  {"setenv",    os_setenv},
+  {"unsetenv",  os_unsetenv},
+  {"environ",   os_environ},
   {"remove",    os_remove},
   {"rename",    os_rename},
   {"setlocale", os_setlocale},
