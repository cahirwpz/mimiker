Stop virtual clock as soon as debug exception is triggered.
Index: qemu-mimiker/qemu-7.1.0/gdbstub.c
===================================================================
--- qemu-mimiker.orig/qemu-7.1.0/gdbstub.c
+++ qemu-mimiker/qemu-7.1.0/gdbstub.c
@@ -357,6 +357,7 @@ typedef struct GDBState {
     char *socket_path;
     int running_state;
 #else
+    bool resume_clock;
     CharBackend chr;
     Chardev *mon_chr;
 #endif
@@ -523,8 +524,6 @@ static int gdb_continue_partial(char *ne
     }
     gdbserver_state.running_state = 1;
 #else
-    int flag = 0;
-
     if (!runstate_needs_reset()) {
         bool step_requested = false;
         CPU_FOREACH(cpu) {
@@ -547,12 +546,12 @@ static int gdb_continue_partial(char *ne
                 trace_gdbstub_op_stepping(cpu->cpu_index);
                 cpu_single_step(cpu, gdbserver_state.sstep_flags);
                 cpu_resume(cpu);
-                flag = 1;
+                gdbserver_state.resume_clock = true;
                 break;
             case 'c':
                 trace_gdbstub_op_continue_cpu(cpu->cpu_index);
                 cpu_resume(cpu);
-                flag = 1;
+                gdbserver_state.resume_clock = true;
                 break;
             default:
                 res = -1;
@@ -560,9 +559,6 @@ static int gdb_continue_partial(char *ne
             }
         }
     }
-    if (flag) {
-        qemu_clock_enable(QEMU_CLOCK_VIRTUAL, true);
-    }
 #endif
     return res;
 }
@@ -3141,6 +3137,9 @@ static void gdb_read_byte(uint8_t ch)
             abort();
         }
     }
+
+    qemu_clock_enable(QEMU_CLOCK_VIRTUAL, gdbserver_state.resume_clock);
+    gdbserver_state.resume_clock = false;
 }
 
 /* Tell the remote gdb that the process has exited.  */
Index: qemu-mimiker/qemu-7.1.0/target/mips/tcg/exception.c
===================================================================
--- qemu-mimiker.orig/qemu-7.1.0/target/mips/tcg/exception.c
+++ qemu-mimiker/qemu-7.1.0/target/mips/tcg/exception.c
@@ -20,6 +20,7 @@
 
 #include "qemu/osdep.h"
 #include "qemu/log.h"
+#include "qemu/timer.h"
 #include "cpu.h"
 #include "internal.h"
 #include "exec/helper-proto.h"
@@ -56,6 +57,7 @@ void helper_raise_exception(CPUMIPSState
 
 void helper_raise_exception_debug(CPUMIPSState *env)
 {
+    qemu_clock_enable(QEMU_CLOCK_VIRTUAL, false);
     do_raise_exception(env, EXCP_DEBUG, 0);
 }
 
