#	$NetBSD: genassym.cf,v 1.3 2016/08/12 15:26:04 skrll Exp $

#
# Copyright (c) 2001 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Matt Thomas <matt@3am-sfotware.com>.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

include <sys/types.h>
include <ucontext.h>
include <signal.h>

define UC_GREGS offsetof(ucontext_t, uc_mcontext.__gregs[0])
define UC_GREGS_V0 offsetof(ucontext_t, uc_mcontext.__gregs[_REG_V0])
define UC_GREGS_S0 offsetof(ucontext_t, uc_mcontext.__gregs[_REG_S0])
define UC_GREGS_S1 offsetof(ucontext_t, uc_mcontext.__gregs[_REG_S1])
define UC_GREGS_S2 offsetof(ucontext_t, uc_mcontext.__gregs[_REG_S2])
define UC_GREGS_S3 offsetof(ucontext_t, uc_mcontext.__gregs[_REG_S3])
define UC_GREGS_S4 offsetof(ucontext_t, uc_mcontext.__gregs[_REG_S4])
define UC_GREGS_S5 offsetof(ucontext_t, uc_mcontext.__gregs[_REG_S5])
define UC_GREGS_S6 offsetof(ucontext_t, uc_mcontext.__gregs[_REG_S6])
define UC_GREGS_S7 offsetof(ucontext_t, uc_mcontext.__gregs[_REG_S7])
define UC_GREGS_S8 offsetof(ucontext_t, uc_mcontext.__gregs[_REG_S8])
define UC_GREGS_GP offsetof(ucontext_t, uc_mcontext.__gregs[_REG_GP])
define UC_GREGS_SP offsetof(ucontext_t, uc_mcontext.__gregs[_REG_SP])
define UC_GREGS_PC offsetof(ucontext_t, uc_mcontext.__gregs[_REG_EPC])
define UC_GREGS_EPC offsetof(ucontext_t, uc_mcontext.__gregs[_REG_EPC])
define UC_FPREGS offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[0])
define UC_FPREGS_F20 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[20])
define UC_FPREGS_F21 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[21])
define UC_FPREGS_F22 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[22])
define UC_FPREGS_F23 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[23])
define UC_FPREGS_F24 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[24])
define UC_FPREGS_F25 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[25])
define UC_FPREGS_F26 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[26])
define UC_FPREGS_F27 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[27])
define UC_FPREGS_F28 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[28])
define UC_FPREGS_F29 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[29])
define UC_FPREGS_F30 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[30])
define UC_FPREGS_F31 offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_r.__fp_regs[31])
define UC_FPREGS_FCSR offsetof(ucontext_t, uc_mcontext.__fpregs.__fp_csr)
define UC_MASK offsetof(ucontext_t, uc_sigmask)
define UC_FLAGS offsetof(ucontext_t, uc_flags)
define UC_LINK offsetof(ucontext_t, uc_link)
define UCONTEXT_SIZ sizeof(ucontext_t)

define _UC_SIGMASK _UC_SIGMASK
define _UC_CPU _UC_CPU
define _UC_FPU _UC_FPU
define _UC_STACK _UC_STACK

define SS_SP offsetof(stack_t, ss_sp)
define SS_SIZE offsetof(stack_t, ss_size)
define SS_FLAGS offsetof(stack_t, ss_flags)

define SS_ONSTACK SS_ONSTACK
define STACK_SIZ ((sizeof(stack_t) + 2 * sizeof(register_t) - 1) & -(2 * sizeof(register_t)))
