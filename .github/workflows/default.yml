name: Mimiker

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  verify_c_style:
    name: Verify C code style
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: ./verify-format.sh

  verify_py_style:
    name: Verify Python code style
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - run: ./verify-pycodestyle.sh

  build:
    name: Build Mimiker
    strategy:
      fail-fast: false
      matrix:
        build: [mips-kasan, mips-kcsan, aarch64-kasan, aarch64-kcsan,
                riscv32-kasan, riscv64-kasan]
    runs-on: self-hosted
    needs: [verify_c_style, verify_py_style]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: ./action.sh build ${{ matrix.build }}
      - uses: actions/upload-artifact@v3
        with:
          name: "${{ matrix.build }} kernel+ramdisk"
          path: |
            bin/*/*.uelf
            initrd.cpio
            sys/dts/*.dtb
            sys/mimiker.elf
            sys/mimiker.elf.map
            sys/mimiker.img.gz
            usr.bin/*/*.uelf

  tests:
    name: Test Kernel
    strategy:
      fail-fast: false
      matrix:
        build: [mips-kasan, aarch64-kasan, aarch64-kcsan, riscv64-kasan]
        suite: [kernel, user]
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: "${{ matrix.build }} kernel+ramdisk"
      - run: ./action.sh tests ${{ matrix.build }} ${{ matrix.suite }}
