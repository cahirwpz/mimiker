# vim: tabstop=8 shiftwidth=8 noexpandtab:

TOPDIR	 = $(realpath $(dir $(filter %Makefile.common, $(MAKEFILE_LIST))))

SOURCES = $(SOURCES_C) $(SOURCES_ASM)
OBJECTS = $(SOURCES_C:.c=.o) $(SOURCES_ASM:.S=.o)
DEPFILES = $(SOURCES_C:%.c=.%.D) $(SOURCES_ASM:%.S=.%.D)

TRIPLET = mipsel-mimiker-elf

TOOLCHAIN_FOUND = $(shell which $(TRIPLET)-gcc > /dev/null; echo $$?)
ifneq ($(TOOLCHAIN_FOUND), 0)
  $(error "mips-mimiker-elf" toolchain not found. Please refer to README.md)
endif

P = $(TRIPLET)-

CC       = $(P)gcc -mips32r2 -EL -g
AR       = $(P)ar
AS       = $(P)as -mips32r2 -EL -g
NM       = $(P)nm
GDB      = $(P)gdb
OBJCOPY  = $(P)objcopy
OBJDUMP  = $(P)objdump
CPIO     = cpio --format=crc
RM       = rm -v -f

HOSTCC	 = gcc -g
SYSROOT  = $(TOPDIR)/sysroot
INSTALL_DIR  = $(TOPDIR)/sysroot
CACHEDIR  = $(TOPDIR)/cache
GENASSYM = $(TOPDIR)/script/genassym.py $(NM)

GCC_INSTALL_PATH = $(shell LANG=C $(CC) -print-search-dirs | \
                     sed -n -e 's/install:\(.*\)/\1/p')
# The _LIBC_LIMITS_H_ prevents include-fixed/limits.h from forcefully including
# the system version of limits.h, which is not present in a freestanding
# environment. I feel like this is a workaround for a bug in GCC.
GCC_SYSTEM_INC = -I$(GCC_INSTALL_PATH)include/ \
                 -I$(GCC_INSTALL_PATH)include-fixed/ \
                 -D_LIBC_LIMITS_H_

ASFLAGS  =
CFLAGS   = -std=gnu11 -Og -Wall -Werror -fno-builtin -nostdinc -nostdlib \
           $(GCC_SYSTEM_INC) -ffreestanding
CPPFLAGS = -Wall -Werror -DDEBUG -I$(TOPDIR)/include
LDFLAGS  = -nostdlib -T $(TOPDIR)/mips/malta.ld

LDLIBS += -L$(TOPDIR)/sys -L$(TOPDIR)/mips -L$(TOPDIR)/stdc -L$(TOPDIR)/tests \
	  -Wl,--start-group \
        -Wl,--whole-archive \
          -lsys \
	  -lmips \
          -ltests \
        -Wl,--no-whole-archive \
        -lstdc \
        -lgcc \
      -Wl,--end-group

# Files required to link kernel image
KRT = \
    $(TOPDIR)/stdc/libstdc.a \
    $(TOPDIR)/mips/libmips.a \
    $(TOPDIR)/sys/libsys.a \
    $(TOPDIR)/tests/libtests.a

DIR = $(patsubst $(TOPDIR)/%,%,$(CURDIR)/)

define emit_dep_rule
CFILE = $(1)
DFILE = .$(patsubst %.S,%.D,$(patsubst %.c,%.D,$(1)))
$$(DFILE): $$(CFILE)
	@echo "[DEP] $$(DIR)$$@"
	$(CC) $(CFLAGS) $(CPPFLAGS) -MM -MG $$^ -o $$@
endef

%.S: %.c
	@echo "[CC] $(DIR)$< -> $(DIR)$@"
	$(CC) $(CFLAGS) $(CPPFLAGS) -S -o $@ $<

%.o: %.c
	@echo "[CC] $(DIR)$< -> $(DIR)$@"
	$(CC) $(CFLAGS) $(CPPFLAGS) -D_KERNELSPACE -c -o $@ $<

%.o: %.S
	@echo "[AS] $(DIR)$< -> $(DIR)$@"
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $<

%.test: %.c
	@echo "[HOSTCC] $(DIR)$< -> $(DIR)$@"
	$(HOSTCC) $(CFLAGS) $(CPPFLAGS) -D_USERSPACE -o $@ $<

%.a:
	@echo "[AR] $(addprefix $(DIR),$^) -> $(DIR)$@"
	$(AR) rs $@ $^

%.h: gen%.o
	@echo "[ASSYM] $(DIR)$@"
	$(GENASSYM) $< $@

.PHONY: all clean

# Pass "VERBOSE=1" at command line to display command being invoked by GNU Make
ifneq ($(VERBOSE), 1)
.SILENT:
endif

$(foreach file,$(SOURCES) null,$(eval $(call emit_dep_rule,$(file))))

ifeq ($(words $(findstring $(MAKECMDGOALS), clean)), 0)
  -include $(DEPFILES)
endif
